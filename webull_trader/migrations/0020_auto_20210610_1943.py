# Generated by Django 3.1.7 on 2021-06-10 23:43

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('webull_trader', '0019_auto_20210608_2210'),
    ]

    operations = [
        migrations.CreateModel(
            name='StockQuote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=64)),
                ('price', models.FloatField()),
                ('volume', models.FloatField()),
                ('change', models.FloatField()),
                ('change_percentage', models.FloatField()),
                ('price_range', models.CharField(default='-', max_length=64)),
                ('beta', models.FloatField(default=1.0)),
                ('market_value', models.FloatField(blank=True, default=None, null=True)),
                ('avg_price_50d', models.FloatField()),
                ('avg_price_200d', models.FloatField()),
                ('avg_volume', models.FloatField()),
                ('last_div', models.FloatField(default=1.0)),
                ('exchange', models.CharField(default='NASDAQ', max_length=64)),
                ('sector', models.CharField(default='Technology', max_length=64)),
                ('industry', models.CharField(default='Consumer Electronics', max_length=128)),
                ('eps', models.FloatField(blank=True, default=None, null=True)),
                ('pe', models.FloatField(blank=True, default=None, null=True)),
                ('outstanding_shares', models.FloatField(blank=True, default=None, null=True)),
                ('is_etf', models.BooleanField(default=False)),
            ],
        ),
        migrations.AlterField(
            model_name='overnightposition',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=7),
        ),
        migrations.AlterField(
            model_name='overnighttrade',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=7),
        ),
        migrations.AlterField(
            model_name='swingposition',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=100),
        ),
        migrations.AlterField(
            model_name='swingtrade',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=100),
        ),
        migrations.AlterField(
            model_name='tradingsettings',
            name='algo_type',
            field=models.PositiveSmallIntegerField(choices=[(0, '[DAY (MOMO)] Momo day trade as much as possible, mainly for collect data.'), (1, '[DAY (MOMO REDUCE SIZE)] Momo day trade based on win rate, reduce size when win rate low.'), (3, '[DAY (MOMO NEW HIGH)] Momo day trade, no entry if the price not break max of last high price.'), (2, '[DAY (RED GREEN)] Day trade based on red to green strategy.'), (10, '[DAY (BREAKOUT 10)] Breakout day trade, entry if price reach 10 minutes new high.'), (4, '[DAY (BREAKOUT 20)] Breakout day trade, entry if price reach 20 minutes new high.'), (5, '[DAY (BREAKOUT 30)] Breakout day trade, entry if price reach 30 minutes new high.'), (6, '[DAY (BREAKOUT EARNINGS)] Breakout and earning day trade, entry if price reach 30 minutes new high.'), (7, '[DAY (EARNINGS)] Earning date day trade, entry if gap up and exit trade intraday.'), (8, '[DAY (EARNINGS OVERNIGHT)] Earning date day trade, entry if gap up and may hold position overnight.'), (9, '[DAY (EARNINGS BREAKOUT)] Earning date day trade, entry if gap up and do breakout trade if no earning event.'), (100, '[SWING (TURTLE 20)] Swing trade based on turtle trading rules (20 days).'), (101, '[SWING (TURTLE 55)] Swing trade based on turtle trading rules (55 days).'), (201, '[DAY (RED GREEN) / SWING (TURTLE 55)] Day trade based on red to green strategy. / Swing trade based on turtle trading rules (55 days).'), (202, '[DAY (BREAKOUT 10) / SWING (TURTLE 55)] Breakout day trade, entry if price reach 10 minutes new high. / Swing trade based on turtle trading rules (55 days).'), (203, '[DAY (EARNINGS) / SWING (TURTLE 55)] Earning date day trade, entry if gap up and exit trade intraday. / Swing trade based on turtle trading rules (55 days).')], default=0),
        ),
        migrations.AlterField(
            model_name='webullorder',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=999),
        ),
        migrations.AlterField(
            model_name='webullordernote',
            name='setup',
            field=models.PositiveSmallIntegerField(choices=[(0, '[Day] First candle new high'), (1, '[Day] Gap and Go'), (2, '[Day] Bull Flag'), (3, '[Day] Reversal'), (4, '[Day] Red to Green'), (8, '[Day] 10 minutes new high'), (5, '[Day] 20 minutes new high'), (6, '[Day] 30 minutes new high'), (7, '[Day] Earning Gap'), (100, '[Swing] 20 days new high'), (101, '[Swing] 55 days new high'), (500, '[Error] Failed to sell'), (999, 'Unknown')], default=0),
        ),
    ]
